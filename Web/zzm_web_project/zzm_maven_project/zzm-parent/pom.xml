<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.1</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.zzm</groupId>
    <artifactId>zzm-parent</artifactId>
    <version>1.0-SNAPSHOT</version>
    <!--
    继承关系实现
    1. 创建maven模块 ZZM-parent，该工程为父工程，设置打包方式pom(默认jar)。
    2. 在子工程的pom.xml文件中，配置继承关系。
      注意事项
        在子工程中，配置了继承关系之后，坐标中的groupId是可以省略的，因为会自动继承父工程的。
        relativePath指定父工程的pom文件的相对位置(如果不指定，将从本地仓库/远程仓库查找该工程)。
    3. 在父工程中配置各个工程共有的依赖(子工程会自动继承父工程的依赖)。
      注意事项
        若父子工程都配置了同一个依赖的不同版本，以子工程的为准。-->
    <!--
    jar: 普通模块打包，springboot项目基本都是jar包(内嵌tomcat运行)
    war: 普通web程序打包，需要部署在外部的tomcat服务器中运行
    pom: 父工程或聚合工程，该模块不写代码，仅进行依赖管理-->
    <packaging>pom</packaging>

    <name>zzm-parent</name>
    <url>http://maven.apache.org</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!--自定义属性/引用属性-->
        <lombok.version>1.18.30</lombok.version>
        <jjwt.version>0.9.1</jjwt.version>
        <jaxb-api.version>2.3.1</jaxb-api.version>
        <activation.version>1.1.1</activation.version>
        <aliyun-sdk-oss.version>3.15.1</aliyun-sdk-oss.version>
        <jaxb-runtime.version>2.3.3</jaxb-runtime.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>
    </dependencies>

    <!--
    版本锁定
      在maven中，可以在父工程的pom文件中通过<dependencyManagement>来统一管理依赖版本。

      注意事项
        子工程引入依赖时，无需指定<version〉版本号，父工程统一管理。变更依赖版本，只需在父工程中统一变更。

    1. <dependencyManagement>与<dependencies>的区别是什么?
      <dependencies>是直接依赖,在父工程配置了依赖,子工程会直接继承下来。
      <dependencyManagement>是统一管理依赖版本，,不会直接依赖，还需要在子工程中引入所需依赖(无需指定版本)
    -->
    <!--统一管理依赖版本-->
    <dependencyManagement>
        <dependencies>
            <!--JWT令牌-->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>${jaxb-api.version}</version>
            </dependency>
            <!--<dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-impl</artifactId>
                <classifier>sources</classifier>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-core</artifactId>
                <classifier>sources</classifier>
            </dependency>-->
            <dependency>
                <groupId>javax.activation</groupId>
                <artifactId>activation</artifactId>
                <version>${activation.version}</version>
            </dependency>

            <!--阿里云OSS-->
            <dependency>
                <groupId>com.aliyun.oss</groupId>
                <artifactId>aliyun-sdk-oss</artifactId>
                <version>${aliyun-sdk-oss.version}</version>
            </dependency>
            <!--<dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>2.3.1</version>
            </dependency>
            <dependency>
                <groupId>javax.activation</groupId>
                <artifactId>activation</artifactId>
                <version>1.1.1</version>
            </dependency>-->
            <!-- no more than 2.3.3-->
            <dependency>
                <groupId>org.glassfish.jaxb</groupId>
                <artifactId>jaxb-runtime</artifactId>
                <version>${jaxb-runtime.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
</project>
